on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    container: golang:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apt-get update && \
          apt-get install -y zip && \
          go get -u golang.org/x/lint/golint
      - name: Prep version
        run: |
          export VERSION=$(echo "${{ github.ref }}" | cut -d/ -f3) && \
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Build project
        run: |
          ./build.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/cfn-format-${{ env.VERSION }}_linux-amd64.zip
          asset_name: cfn-format-${{ env.VERSION }}_linux-amd64.zip
          asset_content_type: application/zip
